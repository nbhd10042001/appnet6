@using App.Models.Product;
@using static App.Views.Shared.Components.CategoryProductSidebar

@model List<ProductModel>

@{
    List<CategoryProductModel> categories = ViewBag.categories as List<CategoryProductModel>;
    CategoryProductModel categoryChoosed = ViewBag.categoryChoosed as CategoryProductModel;
    ViewData["Title"] = (categoryChoosed != null) ? categoryChoosed.Title : "Products";

}

@* Breadcrumb *@
<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a style="text-decoration: none;" asp-action="Index" asp-route-categoryslug="@null">
            Home
        </a>
    </li>

    @if(categoryChoosed != null)
    {
        var list = categoryChoosed.GetListParents();
        foreach(var item in list)
        {
            <li class="breadcrumb-item">
                <a style="text-decoration: none;" asp-action="Index" asp-route-categoryslug="@item.Slug">
                    @item.Title
                </a>
            </li>
        }
    }
  </ol>
</nav>


@* List Products *@
<h1>@ViewData["Title"]</h1>

@if (categoryChoosed != null){
    <p>@categoryChoosed.Content</p>
}
else
{
    <p>Toan bo cac san pham cua tat ca cac danh muc</p>
}

<hr>

<div class="d-flex flex-wrap justify-content-between">
    @foreach(var product in Model)
    {
        var srcImg = "/contents/noImg.png";
        if (product.Photos.Any())
        {
            srcImg = $"/contents/Products/{product.Photos.FirstOrDefault().FileName}";
        }

        <div class="card mb-2" style="width: 32%;">
            <img src="@srcImg" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">@product.Title</h5>
                <p class="card-text text-truncation">@product.Description</p>
                <p>
                    <i class="text-danger">
                        @string.Join(", " , product.ProductCategoryProducts.Select(pc => pc.CategoryProduct.Title))
                    </i>
                </p>
                <p>Price: <strong>@product.Price</strong></p>
            </div>

            <div class="card-footer">
                <a class="card-link" asp-controller="ViewProduct" asp-action="Detail" asp-route-productslug="@product.Slug" style="text-decoration:none;">
                    Xem chi tiet
                </a>
                <a asp-action="AddToCart" asp-route-productid="@product.ProductId" class="btn btn-success mx-2">
                    Đặt hàng
                </a>
            </div>
        </div>
    }
</div>

@section Sidebar{
    @* goi func invoke trong CategorySidebar.cs va truyen tham so data*@
    @await Component.InvokeAsync("App.Views.Shared.Components.CategoryProductSidebar", 
                                new CategoryProductSidebarData()
                                {
                                    Categories = categories,
                                    level = 0,
                                    categorySlug = ViewBag.categoryslug
                                })
}

<partial name="_PagingXTL" model="@ViewBag.pagingmodel" />