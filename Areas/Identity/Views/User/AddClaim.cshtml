@model AddUserClaimModel
@using App.Services
@inject SidebarAdminService _sidebarAdminService

@{
    ViewData["Title"] = "Claim của user";
    Layout = "_LayoutAdmin";

}
<h1>@ViewData["Title"] : @ViewBag.user.UserName</h1>
<partial name="_StatusMessage" />

@if (ViewBag.userclaim != null)
{
    <h3>Edit claim user</h3>
}
else 
{
    <h3>Create new claim user</h3>
}
<hr>

<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="ClaimType" class="control-label"></label>
                <input asp-for="ClaimType" class="form-control" />
                <span asp-validation-for="ClaimType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ClaimValue" class="control-label"></label>
                <input asp-for="ClaimValue" class="form-control" />
                <span asp-validation-for="ClaimValue" class="text-danger"></span>
            </div>

            <div class="form-group">
                @if (ViewBag.userclaim != null)
                {
                    <input type="submit" value="Cập nhật" class="btn btn-primary" />
                    <input type="submit" value="Xóa" asp-route-claimid="@ViewBag.userclaim.Id" 
                      class="btn btn-danger" asp-action="DeleteClaim" />
                }
                else 
                {
                    <input type="submit" value="Tạo mới" class="btn btn-primary" />
                }
                
                <a class="btn btn-danger" asp-action="AddRole" asp-route-id="@ViewBag.user.Id">Back</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@{
    _sidebarAdminService.SetActive("User", "Index", "Identity");
}

@section Sidebar
{
    @Html.Raw(_sidebarAdminService.RenderHtml())
}